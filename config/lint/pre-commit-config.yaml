# Pre-commit configuration for code quality enforcement
# This file defines hooks that run automatically before each commit

repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-added-large-files
    -   id: check-json
    -   id: check-merge-conflict
    -   id: detect-private-key

-   repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
    -   id: black
        language_version: python3

-   repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
    -   id: isort
        args: ["--profile", "black"]

-   repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
    -   id: flake8
        additional_dependencies: [flake8-docstrings]

-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.3.0
    hooks:
    -   id: mypy
        additional_dependencies: [types-requests, types-PyYAML]

-   repo: https://github.com/pycqa/pylint
    rev: v2.17.0
    hooks:
    -   id: pylint
        args: [
            "--disable=C0111", # missing-docstring
            "--disable=C0103", # invalid-name
            "--disable=C0330", # bad-continuation
            "--disable=C0326", # bad-whitespace
        ]

-   repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.9.0
    hooks:
    -   id: shellcheck

-   repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.7.0-1
    hooks:
    -   id: shfmt
        args: ["-i", "4", "-ci", "-bn"]

-   repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
    -   id: markdownlint
        args: ["--config", "config/lint/markdownlint.yaml"]

-   repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
    -   id: yamllint
        args: ["-c", "config/lint/yamllint.yaml"]

# Custom hooks for dependency management and documentation coverage
-   repo: local
    hooks:
    -   id: dependency-audit
        name: Dependency Vulnerability Audit
        description: Check dependencies for known vulnerabilities
        entry: bash scripts/utils/hooks/dependency-check.sh
        language: system
        pass_filenames: false
        files: 'requirements.txt|package.json|pyproject.toml|docker-compose.yml|pom.xml|build.gradle'
        stages: [commit, push]
        
    -   id: documentation-coverage
        name: Documentation Coverage Check
        description: Check documentation coverage for Python files
        entry: python scripts/utils/quality/check_documentation_coverage.py
        language: python
        types: [python]
        pass_filenames: true
        stages: [commit]